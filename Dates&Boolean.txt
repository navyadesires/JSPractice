june 21

Dates:

<p id="demo"></p>
<script>
const d = new Date("2024-03-20");
document.getElementById("demo").innerHTML = d;
</script>
o/p:Wed Mar 20 2024 05:30:00 GMT+0530 (India Standard Time)

Creating Date Objects
Date objects are created with the new Date() constructor.

JS new Date()
new date() creates a date object with the current date and time.

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d;
</script>

o/p:Wed Jun 21 2023 11:06:54 GMT+0530 (India Standard Time)

JavaScript counts months from 0 to 11:

January = 0.

December = 11.


<p id="demo"></p>
<script>
const d = new Date(1998, 02,20, 09, 25,30, 0);
document.getElementById("demo").innerHTML = d;
</script>
o/p:Fri Mar 20 1998 09:25:30 GMT+0530 (India Standard Time)

* One parameter will be intrepreted as new date

<p id="demo"></p>

<script>
const d = new Date(2020);
document.getElementById("demo").innerHTML = d;
</script>

o/p:Thu Jan 01 1970 05:30:02 GMT+0530 (India Standard Time)

*** Two digit years will be interpreted as 19xx
<script>
const d = new Date(99, 11, 24);
document.getElementById("demo").innerHTML = d;
</script>
o/p:Fri Dec 24 1999 00:00:00 GMT+0530 (India Standard Time)

<script>
const d = new Date(0, 0, 0);
document.getElementById("demo").innerHTML = d;
</script>
o/p:Sun Dec 31 1899 00:00:00 GMT+0521 (India Standard Time)

** Convert date to a string
<script>
const d = new date();
document.getElementById("demo").innerHTML = d.toString();
</script>
o/p:Wed Jun 21 2023 18:54:16 GMT+0530 (India Standard Time)

* convert a date to a date string
* the toDateString() method converts a date to a more readable format.
 
<p id="demo"></p>
<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.toDateString();
</script>
o/p:Wed Jun 21 2023


* the toUTCString() method Convert a date to a string using the UTC standard.

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.toUTCString();
</script>
o/p:Wed, 21 Jun 2023 13:28:43 GMT

*The toISOString() method converts a date to a string using the ISO standard:
<p id="demo"></p>
<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.toISOString();
</script>
o/p:2023-06-21T13:30:26.886Z

june 26

Boolean:
A jS boolean represents one of two value: true and false.

<script>
document.getElementById("demo").innerHTML = 
"100 is " + Boolean(100) + "<br>" +
"3.14 is " + Boolean(3.14) + "<br>" +
"-15 is " + Boolean(-15) + "<br>" +
"Any (not empty) string is " + Boolean("Hello") + "<br>" +
"Even the string 'false' is " + Boolean('false') + "<br>" +
"Any expression (except zero) is " + Boolean(1 + 7 + 3.14);
</script>
o/p:100 is true
3.14 is true
-15 is true
Any (not empty) string is true
Even the string 'false' is true
Any expression (except zero) is true

**The Boolean value of "" (empty string) is false:
<script>
let x="";
document.getElementById("demo").innerHTML = Boolean("");
</script>
o/p:false

**The Boolean value of null is false:
let x = null;
document.getElementById("demo").innerHTML = Boolean(x);
o/p: false

**The Boolean value of undefined is false
let x;
document.getElementById("demo").innerHTML = Boolean(x);
o/p: false

**The Boolean value of false is (you guessed it) false:
let x = false;
document.getElementById("demo").innerHTML = Boolean(x);
o/p: false

**The Boolean value of NaN is false:
let x = 10/ "Hello";
document.getElementById("demo").innerHTML = Boolean(x);
o/p:false

**JavaScript Booleans as Objects
<script>
let x = false;
let y = new Boolean(false);
document.getElementById("demo").innerHTML = typeof x + "<br>" + typeof y;
</script>
o/p:boolean
object

**Do not create Boolean objects.

The new keyword complicates the code and slows down execution speed.

Boolean objects can produce unexpected results:

<script>
let x = false;         // x is a boolean
let y = new Boolean(false);  // y is an object
document.getElementById("demo").innerHTML = (x==y);
</script>
o/p:true

<script>
let x = false;         // x is a boolean
let y = new Boolean(false);  // y is an object
document.getElementById("demo").innerHTML = (x==y);
</script>
o/p:false

let result;
result = 20;
console.log(Boolean(result)); // true
console.log(typeof Boolean(result)); // boolean

result = -20;
console.log(Boolean(result)); // true

result = 'hello';
console.log(Boolean(result)); // true

result = {a: 1};
console.log(Boolean(result)); // true

In JavaScript, undefined, null, 0, NaN, '' converts to false. For example,
let result;
// empty string
result = Boolean('');
console.log(result); // false

result = Boolean(0);
console.log(result); // false

result = Boolean(undefined);
console.log(result); // false

result = Boolean(null);
console.log(result); // false

result = Boolean(NaN);
console.log(result); // false
