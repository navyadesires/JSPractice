 JS Booleans 
let x = 5;
let y = 5;
let z = 6;
document.getElementById("demo").innerHTML = (x==y) + "<br>" + (x == z);

const Person ={
firstName : 'Jolly',
lastname :' Doe',
age:20
}
document.getElementById("demo").innerHTML =
Person.firstName + " is " +" "+  Person.age + " years old."

o/p: Jolly is 20 years old.

undefined : 
Any variable can be emptied, by setting the value to undefined. The type will also be undefined.

let car = "Volvo";
car = undefined;

document.getElementById("demo").innerHTML = car + "<br>" + typeof car;

* An empty value has nothing to do with undefined.
let car = "";
document.getElementById("demo").innerHTML =
"The value is: " +
car + "<br>" +
"The type is: " + typeof car;
o/p: The value is:
The type is: string

* functions
function myFunction(p1,p2){
return p1 * p2;
}
let result = myFunction(2,3);
document.getElementById("demo").innerHTML = result;
o/p: 12
let x = myFunction(4,3);
document.getElementById("demo").innerHTML = x;

function myFunction(a, b){
return a * b;
}
o/p: 12

*Accessing Object Methods
we can access an object method with objectName.methodName()

const person = {
firstName : "Jolly",
lastname : "Doe",
age: 26,
fullName : function(){
return this.firstName + " " + this.age;
}
}
document.getElementById("demo").innerHTML = person.fullName();
o/p: Jolly 26


Alert "John" by extracting information from the person object.
const person ={
name :"John",
age : 50
}
document.getElementById("demo").innerHTML = alert(person.name + " is " + person.age); 
o/p: john 50

* Events
the code changes the content of its own element
<button onclick="this.innerHTML=Date()">The time is?</button>
o/p:The time is?

the JavaScript code changes the content of the element with id="demo".

<button onclick="document.getElementById('demo').innerHTML = Date()">The time is?</button>
the code changes the content of its own element (using this.innerHTML)
<button onclick="this.innerHTML()">time is?</button>


